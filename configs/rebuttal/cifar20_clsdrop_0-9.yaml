run: # Configurations for a specific run
  random_seed: 12345 # Integer number of specifying random seed
  log_dir: logs/demo_cifar20_clsdrop_0-9 # String for indicating where to save all the information, including models and computed signals. We can reuse the models saved in the same log_dir.
  time_log: True # Indicate whether to log the time for each step
  num_experiments: 1 # Number of total experiments

audit: # Configurations for auditing
  privacy_game: privacy_loss_model # Indicate the privacy game from privacy_loss_model
  algorithm: RMIA # String for indicating the membership inference attack. We currently support the RMIA introduced by Zarifzadeh et al. 2024(https://openreview.net/pdf?id=sT7UJh5CTc)) and the LOSS attacks
  num_ref_models: 1 # Number of reference models used to audit each target model
  device: cuda:0 # String for indicating the device we want to use for auditing models.
  report_log: report_rmia # String for indicating where to save the report
  batch_size: 5000 # Integer for indicating the batch size for auditing
  data_size: 10000 # Integer for indicating the number of data points to use for auditing

train: # Configuration for training
  model_name: wrn28-2 # String for indicating the model type. We support CNN, wrn28-1, wrn28-2, wrn28-10, vgg16, nn and speedyresnet (requires cuda). More model types can be added in model.py.
  device: [cuda:0] # String for indicating the device we want to use for training models.
batch_size: 32
  optimizer: SGD
  learning_rate: 0.1
  weight_decay: 0.0005
  epochs: 75

data: # Configuration for data
  dataset: cifar20 # String indicates the name of the dataset. We support cifar10, cifar100, purchase100 and texas100 by default.
  data_dir: data
  drop_classes: [0,1,2,3,4,5,6,7,8,9] # List of integers for indicating the classes we want to drop from the dataset